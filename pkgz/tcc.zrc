
pkg\ tcc () {

    export TCC_FLAGS="-O3 -r -nostdlib -nostdinc -pthread -Wno-implicit-function-declaration \
     -fPIC -rdynamic -std=c11 -fdollars-in-identifiers \
     -Wl,--export-dynamic -Wl,--export-all-symbols \
     -Wl,--enable-new-dtags \
     -bench \
-L${PREFIX}/lib \
-I${PREFIX}/include \
-I${PWD} \
-I./ \
"
    : wd "${PWD}/tcc"
    __install__ ()
    {
        git clone https://github.com/d4tocchini/tcc.git
        pushd -q tcc
            git remote add up git://repo.or.cz/tinycc.git
        popd
        @ pull
    }
    \ pull ()
    {
        @ cd
        git checkout mob
        git pull
    }
    \ +lflags ()
    {
        arr+ lflags -L"${PREFIX}/lib" -ltcc
            # -lc -ldl -lz
    }
    \ +cflags ()
    {
        # TODO: -I/usr/tcc/include
        # arr+ cflags -I"${USR}/include"
    }
    \ help ()
    {
        echo "tcc configure , make , install   "
        echo
        echo "By default, tcc is installed in `/usr/local/bin`."
        echo "`./configure --help`  shows configuration options."
    }
    \ install-if-needed ()
    {
        if [[ ! -f "$PREFIX/bin/tccrun" ]]; then
            @ configure
            @ make
            @ install
        fi
    }
    \ configure ()
    {
        @ cd
        # if ((OS_MAC)) &&
        #     argv+=--sysincludepaths="${MACOS_SDK_PATH}/usr/include:{B}/include"
            # :${PREFIX}/include:${PREFIX}/lib/tcc/include
        MAKE=$MAKE ./configure --prefix="$PREFIX" $argv
    }
    \ make ()
    {
        @ cd
        $MAKE $argv
    }
    \ install ()
    {
        @ cd
        $MAKE install $argv

        echo "#!/bin/sh" > "$PREFIX"/bin/tccrun
        echo "exec "$PREFIX"/bin/tcc -run \${@}" >> "$PREFIX"/bin/tccrun
        chmod +x "$PREFIX"/bin/tccrun
        echo "-> \"$PREFIX/bin\" : tccrun"
        # -> "$USR/bin" : tcc
        # -> "$USR/lib/tcc" : libtcc1.a bcheck.o bt-exe.o bt-log.o
        # -> "$USR/lib/tcc/include" : ./include/*.h ./tcclib.h
        # -> "$USR/lib" : libtcc.a
        # -> "$USR/include" : ./libtcc.h
        # -> "$USR/share/man/man1" : tcc.1
        # -> "$USR/share/info" : tcc-doc.info
        # -> "$USR/share/doc" : tcc-doc.html
    }
    \ test ()
    {
        @ cd
        $MAKE test $argv
    }
    \ clean ()
    {
        @ cd
        rm -f "./config.mk"
        $MAKE clean $argv
    }
}
