
pkg\ gfx () {
    : wd "$PWD"/gfx
    __install__ ()
    {
        git clone https://github.com/d4tocchini/gfx.git
    }
    \ +cflags ()
    {
        # modz +cflags "sdl2" "nanovg" "nanovg_metal"
        pkg "sdl2"      +cflags
        pkg "nanovg"       +cflags
        # bld gfx runtime flags
        arr+ cflags "-DGFX_ENV" "-DGFX_SDL"
        ((BLD_GL)) && {
            arr+ cflags "-DGFX_GL=${BLD_GL}"
        }
        ((BLD_GLES)) && {
            arr+ cflags "-DGFX_GLES=${BLD_GLES}"
        }
        ((BLD_WEBGL)) && {
            arr+ cflags "-DGFX_WEBGL=${BLD_WEBGL}"
        }
        ((BLD_METAL)) && {
            arr+ cflags "-DGFX_METAL=${BLD_METAL}"
        }
        # bld gfx os flags
        ((BLD_MAC)) && {
            arr+ cflags "-ObjC" \
                "-DGFX_MAC=${BLD_MAC}" \
                "-D_NATIVE_OBJC_EXCEPTIONS" \
                "-mmacosx-version-min=10.13"
        }
        ((BLD_LINUX)) && {
            arr+ cflags "-no-pie" \
                "-DGFX_LINUX=${BLD_LINUX}"
        }
    }
    \ +lflags ()
    {
        pkg "sdl2"      +lflags
        pkg "nanovg"    +lflags
        if ((BLD_METAL)); then
            pkg "nanovg_metal" +lflags
            arr+ lflags -framework Metal
        fi
        #  platform targets
        if ((BLD_WEBGL)); then
            # ...
        elif ((BLD_MAC)); then
            arr+ lflags \
                -lobjc \
                -framework Foundation \
                -framework AppKit \
                -framework QuartzCore \
                -framework Cocoa
            if ((BLD_GL)); then
                arr+ lflags \
                    -framework OpenGL \
                    -lGLEW
            fi
        elif ((BLD_GL)); then
            arr+ lflags \
                    -lGL -lGLU -lGLEW
        fi
    }
    \ build ()
    {
        echo hello $1
    }
    \ install ()
    {
        rm -rf "${PREFIX}/include/gfx"
        mkdir -p "${PREFIX}/include/gfx"
        cp "$wd"/*.h "${PREFIX}/include/gfx"
    }
}
